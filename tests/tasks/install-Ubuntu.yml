---
# Tests Ruby 2 is installed correctly

# If using non-system sources (preferred)

- name: determine if non-system ruby package is installed - Ubuntu
  command: dpkg -s ruby2.2
  changed_when: False
  register: ruby2_test_fact_ruby_package_is_installed
  when: BARC_use_non_system_package_sources == true or BARC_use_non_system_package_sources == 'True'
- name: determine if non-system ruby development package is installed - Ubuntu
  command: dpkg -s ruby2.2-dev
  changed_when: False
  register: ruby2_test_fact_ruby_development_package_is_installed
  when: BARC_use_non_system_package_sources == true or BARC_use_non_system_package_sources == 'True'
- name: assert non-system ruby packages are installed
  assert:
    that:
      - "'install ok installed' in ruby2_test_fact_ruby_package_is_installed.stdout"
      - "'install ok installed' in ruby2_test_fact_ruby_development_package_is_installed.stdout"
  when: BARC_use_non_system_package_sources == true or BARC_use_non_system_package_sources == 'True'

# If using system-sources only

- name: determine if system only ruby package is installed - Ubuntu
  command: dpkg -s ruby2.0
  changed_when: False
  register: ruby2_test_fact_ruby_package_is_installed
  when: BARC_use_non_system_package_sources == false or BARC_use_non_system_package_sources == 'False'
- name: determine if system only ruby development package is installed - Ubuntu
  command: dpkg -s ruby2.0-dev
  changed_when: False
  register: ruby2_test_fact_ruby_development_package_is_installed
  when: BARC_use_non_system_package_sources == false or BARC_use_non_system_package_sources == 'False'
- name: assert system only ruby packages are installed
  assert:
    that:
      - "'install ok installed' in ruby2_test_fact_ruby_package_is_installed.stdout"
      - "'install ok installed' in ruby2_test_fact_ruby_development_package_is_installed.stdout"
  when: BARC_use_non_system_package_sources == false or BARC_use_non_system_package_sources == 'False'
